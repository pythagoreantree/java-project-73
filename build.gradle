plugins {
	id 'application'
	id 'checkstyle'
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.liquibase.gradle' version '2.0.4'
}

group = 'hexlet.code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.22'

	annotationProcessor(
			'org.projectlombok:lombok:1.18.22',
			'javax.annotation:javax.annotation-api:1.3.2',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.6'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.liquibase:liquibase-core:4.15.0'
	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core:4.15.0',
			'org.liquibase.ext:liquibase-hibernate5:4.15.0',
			'org.springframework.boot:spring-boot-starter-data-jpa'
	)
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
	options.release = 17
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}

diffChangeLog {
	dependsOn compileJava
}

// Настраиваем Liquibase
liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/changelog-master.xml'
			url 'jdbc:h2:mem:taskManager'
			username ''
			password ''
			// Сравниваем с моделями, задавая пакет
			referenceUrl 'hibernate:spring:hexlet.code.model.' +
					'?dialect=org.hibernate.dialect.H2Dialect'  +
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}